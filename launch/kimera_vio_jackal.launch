<launch>
  <arg name="robot_name"  doc="Namespace of the platform producing sensor data." />
  <arg name="robot_id"    doc="ID of the platform producing sensor data." />
  <arg name="online"      default="true" />
  <arg name="log_output"  default="false"/>
  <arg name="use_d455"    default="true" />
  <arg name="replay"      default="false" />
  <arg name="verbosity"   default="0"/>

  <arg name="debug"       default="false"/>
  <arg name="debug_dense" default="false"/>
  <arg name="launch_prefix" value="" unless="$(arg debug_dense)"/>
  <arg name="launch_prefix" value="gdb -ex run --args" if="$(arg debug_dense)"/>

  <arg name="include_pipeline_args" default="false" />

  <!-- BoW vector publishing for Kimera-Multi -->
  <arg name="bow_batch_size"          default="10" />
  <arg name="bow_skip_num"            default="2" />
  <arg name="publish_vlc_frames"      default="true"/>

  <arg name="do_coarse_temporal_sync" default="false"/>
  <arg name="do_fine_temporal_sync"   default="false"/>
  <arg name="use_external_odom"       default="true"/>
  <arg name="use_lcd"                 default="true"/>
  <arg name="lcd_no_optimize"         default="false"/>
  <arg name="lcd_no_detection"        default="false"/>
  <!-- diable stereo depth checks for LCD feature matching -->
  <arg name="lcd_disable_stereo_match_depth_check" default="true"/>
  <!-- diable backend using incremental pose -->
  <arg name="no_incremental_pose" default="true"/>

  <arg name="num_robots"              default="1"/>
  <arg name="use_uwb"               default="false"/>
  <arg name="rosbag_path"        doc="path to rosbag, must set unless online"/>

  <!-- enable publishing but disable all GUIs -->
  <arg name="visualize"		      default="true"/>
  <arg name="viz_type"                default="0" />
  <arg name="use_rviz"                default="true"/>

  <!-- Other settings -->
  <arg name="log_gt_data"             value="true"/>
  <arg name="log_imu_data"            value="true"/>
  <arg name="should_use_sim_time"     default="false"/>
  <arg name="params_folder"           value="$(find kimera_multi)/params/D455" />
  <arg name="log_output_path"         default="$(find kimera_multi)/logs" if="$(arg log_output)" />
  <!-- <arg name="log_output_path"         default="$(find kimera_multi)/logs" if="$(arg log_output)" /> -->
  <arg name="path_to_vocab"           default="$(find kimera_multi_lcd)/vocab/mit_voc.yml"/>
  <!-- <arg name="path_to_vocab"           default="$(find kimera_vio)/vocabulary/ORBvoc.yml"/> -->

  <!-- Subscribed Topics -->
  <arg name="left_cam_topic"      default="/$(arg robot_name)/forward/infra1/image_rect_raw"/>
  <arg name="right_cam_topic"     default="/$(arg robot_name)/forward/infra2/image_rect_raw"/>
  <arg name="imu_topic"           default="/$(arg robot_name)/forward/imu"/>
  <arg name="external_odom_topic" default="/$(arg robot_name)/jackal_velocity_controller/odom"/>
  <arg name="uwb_topic"           default="/$(arg robot_name)/uwb_distance"/>

  <!-- frame information -->
  <arg name="map_frame_id"      value="$(arg robot_name)/map"/>
  <arg name="base_link_frame_id"  value="$(arg robot_name)/realsense_base"/>
  <arg name="odom_frame_id"        value="$(arg robot_name)/odom"/>
  <arg name="left_cam_frame_id"   value="$(arg robot_name)/forward_infra1_optical_frame"/>
  <arg name="right_cam_frame_id"  value="$(arg robot_name)/forward_infra2_optical_frame"/>

  <!-- Perform stereo dense reconstruction? -->
  <arg name="run_stereo_dense"     default="false"/>
  <group ns="$(arg robot_name)/stereo_gray" if="$(arg run_stereo_dense)">
    <!-- StereoSGBM -->
    <node name="dense_stereo" pkg="image_undistort" type="dense_stereo_node" launch-prefix="$(arg launch_prefix)" >
      <param name="input_camera_info_from_ros_params" value="true"/>
      <param name="first_camera_namespace"  value="cam0"/>
      <param name="second_camera_namespace" value="cam1"/>
      <param name="first_output_frame"      value="$(arg left_cam_frame_id)"/>
      <param name="second_output_frame"     value="$(arg right_cam_frame_id)"/>

      <param name="depth/use_sgbm"          value="true"/>
      <param name="depth/do_median_blur"    value="false"/>
      <param name="depth/use_mode_HH"       value="true"/>

      <param name="scale"                   value="1.0"/>
      <param name="process_every_nth_frame" value="1"/>
      <param name="publish_tf"              value="false"/>

      <rosparam file="$(find kimera_multi)/cfg/calib/d455_camchain.yaml"/>
      <param name="cam0/rostopic" value="/$(arg robot_name)/forward/infra1/image_rect_raw"/>
      <param name="cam1/rostopic" value="/$(arg robot_name)/forward/infra2/image_rect_raw"/>

      <remap from="raw/first/image"         to="/$(arg robot_name)/forward/infra1/image_rect_raw"/>
      <remap from="raw/second/image"        to="/$(arg robot_name)/forward/infra2/image_rect_raw"/>
      <remap from="raw/first/camera_info"   to="/$(arg robot_name)/forward/infra1/camera_info"/>
      <remap from="raw/second/camera_info"  to="/$(arg robot_name)/forward/infra2/camera_info"/>
    </node>
  </group>
  
  <!-- Launch actual pipeline -->
  <group ns="$(arg robot_name)" >
    <include file="$(find kimera_vio_ros)/launch/kimera_vio_ros.launch"  pass_all_args="true"/>

    <!-- static transform for realsense to base frame -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_to_realsense" args="0 0 -0.2 0 0 0 $(arg robot_name)/realsense_base $(arg robot_name)/base" />
    <!-- for arl jackals -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="base_to_realsense" args="0 0.5 -0.2 1.59 -1.59 0 $(arg robot_name)/realsense_base $(arg robot_name)/base" /> -->

    <!-- static transform from each odom to global -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="odom_to_global" args="0 0 0 0 0 1 world $(arg robot_name)/map" />

    <!-- Decompress images -->
    <node if="$(arg replay)" pkg="image_transport" type="republish" name="left_img_decompress" 
      args="compressed in:=$(arg left_cam_topic) raw out:=$(arg left_cam_topic)" />
    <node if="$(arg replay)" pkg="image_transport" type="republish" name="right_img_decompress" 
      args="compressed in:=$(arg right_cam_topic) raw out:=$(arg right_cam_topic)" />

  </group>  <!-- ns="$(arg robot_name)" -->

</launch>